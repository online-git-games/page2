InVzZSBzdHJpY3QiOw0KDQpjb25zdCBPRkZMSU5FX0RBVEFfRklMRSA9ICJvZmZsaW5lLmpzIjsN
CmNvbnN0IENBQ0hFX05BTUVfUFJFRklYID0gImMyb2ZmbGluZSI7DQpjb25zdCBCUk9BRENBU1RD
SEFOTkVMX05BTUUgPSAib2ZmbGluZSI7DQpjb25zdCBDT05TT0xFX1BSRUZJWCA9ICJbU1ddICI7
DQpjb25zdCBMQVpZTE9BRF9LRVlOQU1FID0gIiI7DQoNCi8vIENyZWF0ZSBhIEJyb2FkY2FzdENo
YW5uZWwgaWYgc3VwcG9ydGVkLg0KY29uc3QgYnJvYWRjYXN0Q2hhbm5lbCA9ICh0eXBlb2YgQnJv
YWRjYXN0Q2hhbm5lbCA9PT0gInVuZGVmaW5lZCIgPyBudWxsIDogbmV3IEJyb2FkY2FzdENoYW5u
ZWwoQlJPQURDQVNUQ0hBTk5FTF9OQU1FKSk7DQoNCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
Ly8vLy8vLy8vLy8vDQovLyBVdGlsaXR5IG1ldGhvZHMNCmZ1bmN0aW9uIFBvc3RCcm9hZGNhc3RN
ZXNzYWdlKG8pDQp7DQoJaWYgKCFicm9hZGNhc3RDaGFubmVsKQ0KCQlyZXR1cm47CQkvLyBub3Qg
c3VwcG9ydGVkDQoJDQoJLy8gSW1wb3NlIGFydGlmaWNpYWwgKGFuZCBhcmJpdHJhcnkhKSBkZWxh
eSBvZiAzIHNlY29uZHMgdG8gbWFrZSBzdXJlIGNsaWVudCBpcyBsaXN0ZW5pbmcgYnkgdGhlIHRp
bWUgdGhlIG1lc3NhZ2UgaXMgc2VudC4NCgkvLyBOb3RlIHdlIGNvdWxkIHJlbW92ZSB0aGUgZGVs
YXkgb24gc29tZSBtZXNzYWdlcywgYnV0IHRoZW4gd2UgY3JlYXRlIGEgcmFjZSBjb25kaXRpb24g
d2hlcmUgc29tZXRpbWVzIG1lc3NhZ2VzIGNhbiBhcnJpdmUNCgkvLyBpbiB0aGUgd3Jvbmcgb3Jk
ZXIgKGUuZy4gInVwZGF0ZSByZWFkeSIgYXJyaXZlcyBiZWZvcmUgInN0YXJ0ZWQgZG93bmxvYWRp
bmcgdXBkYXRlIikuIFNvIHRvIGtlZXAgdGhlIGNvbnNpc3RlbnQgb3JkZXJpbmcsDQoJLy8gZGVs
YXkgYWxsIG1lc3NhZ2VzIGJ5IHRoZSBzYW1lIGFtb3VudC4NCglzZXRUaW1lb3V0KCgpID0+IGJy
b2FkY2FzdENoYW5uZWwucG9zdE1lc3NhZ2UobyksIDMwMDApOw0KfTsNCg0KZnVuY3Rpb24gQnJv
YWRjYXN0KHR5cGUpDQp7DQoJUG9zdEJyb2FkY2FzdE1lc3NhZ2Uoew0KCQkidHlwZSI6IHR5cGUN
Cgl9KTsNCn07DQoNCmZ1bmN0aW9uIEJyb2FkY2FzdERvd25sb2FkaW5nVXBkYXRlKHZlcnNpb24p
DQp7DQoJUG9zdEJyb2FkY2FzdE1lc3NhZ2Uoew0KCQkidHlwZSI6ICJkb3dubG9hZGluZy11cGRh
dGUiLA0KCQkidmVyc2lvbiI6IHZlcnNpb24NCgl9KTsNCn0NCg0KZnVuY3Rpb24gQnJvYWRjYXN0
VXBkYXRlUmVhZHkodmVyc2lvbikNCnsNCglQb3N0QnJvYWRjYXN0TWVzc2FnZSh7DQoJCSJ0eXBl
IjogInVwZGF0ZS1yZWFkeSIsDQoJCSJ2ZXJzaW9uIjogdmVyc2lvbg0KCX0pOw0KfQ0KDQpmdW5j
dGlvbiBJc1VybEluTGF6eUxvYWRMaXN0KHVybCwgbGF6eUxvYWRMaXN0KQ0Kew0KCWlmICghbGF6
eUxvYWRMaXN0KQ0KCQlyZXR1cm4gZmFsc2U7CQkvLyBwcmVzdW1hYmx5IGxhenkgbG9hZCBsaXN0
IGZhaWxlZCB0byBsb2FkDQoJDQoJdHJ5IHsNCgkJZm9yIChjb25zdCBsYXp5TG9hZFJlZ2V4IG9m
IGxhenlMb2FkTGlzdCkNCgkJew0KCQkJaWYgKG5ldyBSZWdFeHAobGF6eUxvYWRSZWdleCkudGVz
dCh1cmwpKQ0KCQkJCXJldHVybiB0cnVlOw0KCQl9DQoJfQ0KCWNhdGNoIChlcnIpDQoJew0KCQlj
b25zb2xlLmVycm9yKENPTlNPTEVfUFJFRklYICsgIkVycm9yIG1hdGNoaW5nIGluIGxhenktbG9h
ZCBsaXN0OiAiLCBlcnIpOw0KCX0NCgkNCglyZXR1cm4gZmFsc2U7DQp9Ow0KDQpmdW5jdGlvbiBX
cml0ZUxhenlMb2FkTGlzdFRvU3RvcmFnZShsYXp5TG9hZExpc3QpDQp7DQoJaWYgKHR5cGVvZiBs
b2NhbGZvcmFnZSA9PT0gInVuZGVmaW5lZCIpDQoJCXJldHVybiBQcm9taXNlLnJlc29sdmUoKTsJ
CS8vIGJ5cGFzcyBpZiBsb2NhbGZvcmFnZSBub3QgaW1wb3J0ZWQNCgllbHNlDQoJCXJldHVybiBs
b2NhbGZvcmFnZS5zZXRJdGVtKExBWllMT0FEX0tFWU5BTUUsIGxhenlMb2FkTGlzdCkNCn07DQoN
CmZ1bmN0aW9uIFJlYWRMYXp5TG9hZExpc3RGcm9tU3RvcmFnZSgpDQp7DQoJaWYgKHR5cGVvZiBs
b2NhbGZvcmFnZSA9PT0gInVuZGVmaW5lZCIpDQoJCXJldHVybiBQcm9taXNlLnJlc29sdmUoW10p
OwkJLy8gYnlwYXNzIGlmIGxvY2FsZm9yYWdlIG5vdCBpbXBvcnRlZA0KCWVsc2UNCgkJcmV0dXJu
IGxvY2FsZm9yYWdlLmdldEl0ZW0oTEFaWUxPQURfS0VZTkFNRSk7DQp9Ow0KDQpmdW5jdGlvbiBH
ZXRDYWNoZUJhc2VOYW1lKCkNCnsNCgkvLyBJbmNsdWRlIHRoZSBzY29wZSB0byBhdm9pZCBuYW1l
IGNvbGxpc2lvbnMgd2l0aCBhbnkgb3RoZXIgU1dzIG9uIHRoZSBzYW1lIG9yaWdpbi4NCgkvLyBl
LmcuICJjMm9mZmxpbmUtaHR0cHM6Ly9leGFtcGxlLmNvbS9mb28vIiAod29uJ3QgY29sbGlkZSB3
aXRoIGFueXRoaW5nIHVuZGVyIGJhci8pDQoJcmV0dXJuIENBQ0hFX05BTUVfUFJFRklYICsgIi0i
ICsgc2VsZi5yZWdpc3RyYXRpb24uc2NvcGU7DQp9Ow0KDQpmdW5jdGlvbiBHZXRDYWNoZVZlcnNp
b25OYW1lKHZlcnNpb24pDQp7DQoJLy8gQXBwZW5kIHRoZSB2ZXJzaW9uIG51bWJlciB0byB0aGUg
Y2FjaGUgbmFtZS4NCgkvLyBlLmcuICJjMm9mZmxpbmUtaHR0cHM6Ly9leGFtcGxlLmNvbS9mb28v
LXYyIg0KCXJldHVybiBHZXRDYWNoZUJhc2VOYW1lKCkgKyAiLXYiICsgdmVyc2lvbjsNCn07DQoN
Ci8vIFJldHVybiBjYWNoZXMua2V5cygpIGZpbHRlcmVkIGRvd24gdG8ganVzdCBjYWNoZXMgd2Un
cmUgaW50ZXJlc3RlZCBpbiAod2l0aCB0aGUgcmlnaHQgYmFzZSBuYW1lKS4NCi8vIFRoaXMgZmls
dGVycyBvdXQgY2FjaGVzIGZyb20gdW5yZWxhdGVkIHNjb3Blcy4NCmFzeW5jIGZ1bmN0aW9uIEdl
dEF2YWlsYWJsZUNhY2hlTmFtZXMoKQ0Kew0KCWNvbnN0IGNhY2hlTmFtZXMgPSBhd2FpdCBjYWNo
ZXMua2V5cygpOw0KCWNvbnN0IGNhY2hlQmFzZU5hbWUgPSBHZXRDYWNoZUJhc2VOYW1lKCk7DQoJ
cmV0dXJuIGNhY2hlTmFtZXMuZmlsdGVyKG4gPT4gbi5zdGFydHNXaXRoKGNhY2hlQmFzZU5hbWUp
KTsNCn07DQoNCi8vIElkZW50aWZ5IGlmIGFuIHVwZGF0ZSBpcyBwZW5kaW5nLCB3aGljaCBpcyB0
aGUgY2FzZSB3aGVuIHdlIGhhdmUgMiBvciBtb3JlIGF2YWlsYWJsZSBjYWNoZXMuDQovLyBPbmUg
bXVzdCBiZSBhbiB1cGRhdGUgdGhhdCBpcyB3YWl0aW5nLCBzaW5jZSB0aGUgbmV4dCBuYXZpZ2F0
ZSB0aGF0IGRvZXMgYW4gdXBncmFkZSB3aWxsDQovLyBkZWxldGUgYWxsIHRoZSBvbGQgY2FjaGVz
IGxlYXZpbmcganVzdCBvbmUgY3VycmVudGx5LWluLXVzZSBjYWNoZS4NCmFzeW5jIGZ1bmN0aW9u
IElzVXBkYXRlUGVuZGluZygpDQp7DQoJY29uc3QgYXZhaWxhYmxlQ2FjaGVOYW1lcyA9IGF3YWl0
IEdldEF2YWlsYWJsZUNhY2hlTmFtZXMoKTsNCglyZXR1cm4gKGF2YWlsYWJsZUNhY2hlTmFtZXMu
bGVuZ3RoID49IDIpOw0KfTsNCg0KLy8gQXV0b21hdGljYWxseSBkZWR1Y2UgdGhlIG1haW4gcGFn
ZSBVUkwgKGUuZy4gaW5kZXguaHRtbCBvciBtYWluLmFzcHgpIGZyb20gdGhlIGF2YWlsYWJsZSBi
cm93c2VyIHdpbmRvd3MuDQovLyBUaGlzIHByZXZlbnRzIGhhdmluZyB0byBoYXJkLWNvZGUgYW4g
aW5kZXggcGFnZSBpbiB0aGUgZmlsZSBsaXN0LCBpbXBsaWNpdGx5IGNhY2hpbmcgaXQgbGlrZSBB
cHBDYWNoZSBkaWQuDQphc3luYyBmdW5jdGlvbiBHZXRNYWluUGFnZVVybCgpDQp7DQoJY29uc3Qg
YWxsQ2xpZW50cyA9IGF3YWl0IGNsaWVudHMubWF0Y2hBbGwoew0KCQlpbmNsdWRlVW5jb250cm9s
bGVkOiB0cnVlLA0KCQl0eXBlOiAid2luZG93Ig0KCX0pOw0KCQ0KCWZvciAoY29uc3QgYyBvZiBh
bGxDbGllbnRzKQ0KCXsNCgkJLy8gUGFyc2Ugb2ZmIHRoZSBzY29wZSBmcm9tIHRoZSBmdWxsIGNs
aWVudCBVUkwsIGUuZy4gaHR0cHM6Ly9leGFtcGxlLmNvbS9pbmRleC5odG1sIC0+IGluZGV4Lmh0
bWwNCgkJbGV0IHVybCA9IGMudXJsOw0KCQlpZiAodXJsLnN0YXJ0c1dpdGgoc2VsZi5yZWdpc3Ry
YXRpb24uc2NvcGUpKQ0KCQkJdXJsID0gdXJsLnN1YnN0cmluZyhzZWxmLnJlZ2lzdHJhdGlvbi5z
Y29wZS5sZW5ndGgpOw0KCQkNCgkJaWYgKHVybCAmJiB1cmwgIT09ICIvIikJCS8vIC4vIGlzIGFs
c28gaW1wbGljaXRseSBjYWNoZWQgc28gZG9uJ3QgYm90aGVyIHJldHVybmluZyB0aGF0DQoJCXsN
CgkJCS8vIElmIHRoZSBVUkwgaXMgc29sZWx5IGEgc2VhcmNoIHN0cmluZywgcHJlZml4IGl0IHdp
dGggLyB0byBlbnN1cmUgaXQgY2FjaGVzIGNvcnJlY3RseS4NCgkJCS8vIGUuZy4gaHR0cHM6Ly9l
eGFtcGxlLmNvbS8/Zm9vPWJhciBuZWVkcyB0byBjYWNoZSBhcyAvP2Zvbz1iYXIsIG5vdCBqdXN0
ID9mb289YmFyLg0KCQkJaWYgKHVybC5zdGFydHNXaXRoKCI/IikpDQoJCQkJdXJsID0gIi8iICsg
dXJsOw0KCQkJDQoJCQlyZXR1cm4gdXJsOw0KCQl9DQoJfQ0KCQ0KCXJldHVybiAiIjsJCS8vIG5v
IG1haW4gcGFnZSBVUkwgY291bGQgYmUgaWRlbnRpZmllZA0KfTsNCg0KLy8gSGFjayB0byBmZXRj
aCBvcHRpb25hbGx5IGJ5cGFzc2luZyBIVFRQIGNhY2hlIHVudGlsIGZldGNoIGNhY2hlIG9wdGlv
bnMgYXJlIHN1cHBvcnRlZCBpbiBDaHJvbWUgKGNyYnVnLmNvbS80NTMxOTApDQpmdW5jdGlvbiBm
ZXRjaFdpdGhCeXBhc3MocmVxdWVzdCwgYnlwYXNzQ2FjaGUpDQp7DQoJaWYgKHR5cGVvZiByZXF1
ZXN0ID09PSAic3RyaW5nIikNCgkJcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KHJlcXVlc3QpOw0KCQ0K
CWlmIChieXBhc3NDYWNoZSkNCgl7DQoJCS8vIGJ5cGFzcyBlbmFibGVkOiBhZGQgYSByYW5kb20g
c2VhcmNoIHBhcmFtZXRlciB0byBhdm9pZCBnZXR0aW5nIGEgc3RhbGUgSFRUUCBjYWNoZSByZXN1
bHQNCgkJY29uc3QgdXJsID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7DQoJCXVybC5zZWFyY2ggKz0g
TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwMCk7DQoNCgkJcmV0dXJuIGZldGNoKHVy
bCwgew0KCQkJaGVhZGVyczogcmVxdWVzdC5oZWFkZXJzLA0KCQkJbW9kZTogcmVxdWVzdC5tb2Rl
LA0KCQkJY3JlZGVudGlhbHM6IHJlcXVlc3QuY3JlZGVudGlhbHMsDQoJCQlyZWRpcmVjdDogcmVx
dWVzdC5yZWRpcmVjdCwNCgkJCWNhY2hlOiAibm8tc3RvcmUiDQoJCX0pOw0KCX0NCgllbHNlDQoJ
ew0KCQkvLyBieXBhc3MgZGlzYWJsZWQ6IHBlcmZvcm0gbm9ybWFsIGZldGNoIHdoaWNoIGlzIGFs
bG93ZWQgdG8gcmV0dXJuIGZyb20gSFRUUCBjYWNoZQ0KCQlyZXR1cm4gZmV0Y2gocmVxdWVzdCk7
DQoJfQ0KfTsNCg0KLy8gRWZmZWN0aXZlbHkgYSBjYWNoZS5hZGRBbGwoKSB0aGF0IG9ubHkgY3Jl
YXRlcyB0aGUgY2FjaGUgb24gYWxsIHJlcXVlc3RzIGJlaW5nIHN1Y2Nlc3NmdWwgKGFzIGEgd2Vh
ayBhdHRlbXB0IGF0IG1ha2luZyBpdCBhdG9taWMpDQovLyBhbmQgY2FuIG9wdGlvbmFsbHkgY2Fj
aGUtYnlwYXNzIHdpdGggZmV0Y2hXaXRoQnlwYXNzIGluIGV2ZXJ5IHJlcXVlc3QNCmFzeW5jIGZ1
bmN0aW9uIENyZWF0ZUNhY2hlRnJvbUZpbGVMaXN0KGNhY2hlTmFtZSwgZmlsZUxpc3QsIGJ5cGFz
c0NhY2hlKQ0Kew0KCS8vIEtpY2sgb2ZmIGFsbCByZXF1ZXN0cyBhbmQgd2FpdCBmb3IgdGhlbSBh
bGwgdG8gY29tcGxldGUNCgljb25zdCByZXNwb25zZXMgPSBhd2FpdCBQcm9taXNlLmFsbChmaWxl
TGlzdC5tYXAodXJsID0+IGZldGNoV2l0aEJ5cGFzcyh1cmwsIGJ5cGFzc0NhY2hlKSkpOw0KCQ0K
CS8vIENoZWNrIGlmIGFueSByZXF1ZXN0IGZhaWxlZC4gSWYgc28gZG9uJ3QgbW92ZSBvbiB0byBv
cGVuaW5nIHRoZSBjYWNoZS4NCgkvLyBUaGlzIG1ha2VzIHN1cmUgd2Ugb25seSBvcGVuIGEgY2Fj
aGUgaWYgYWxsIHJlcXVlc3RzIHN1Y2NlZWRlZC4NCglsZXQgYWxsT2sgPSB0cnVlOw0KCQ0KCWZv
ciAoY29uc3QgcmVzcG9uc2Ugb2YgcmVzcG9uc2VzKQ0KCXsNCgkJaWYgKCFyZXNwb25zZS5vaykN
CgkJew0KCQkJYWxsT2sgPSBmYWxzZTsNCgkJCWNvbnNvbGUuZXJyb3IoQ09OU09MRV9QUkVGSVgg
KyAiRXJyb3IgZmV0Y2hpbmcgJyIgKyByZXNwb25zZS51cmwgKyAiJyAoIiArIHJlc3BvbnNlLnN0
YXR1cyArICIgIiArIHJlc3BvbnNlLnN0YXR1c1RleHQgKyAiKSIpOw0KCQl9DQoJfQ0KCQ0KCWlm
ICghYWxsT2spDQoJCXRocm93IG5ldyBFcnJvcigibm90IGFsbCByZXNvdXJjZXMgd2VyZSBmZXRj
aGVkIHN1Y2Nlc3NmdWxseSIpOw0KCQ0KCS8vIENhbiBub3cgYXNzdW1lIGFsbCByZXNwb25zZXMg
YXJlIE9LLiBPcGVuIGEgY2FjaGUgYW5kIHdyaXRlIGFsbCByZXNwb25zZXMgdGhlcmUuDQoJLy8g
VE9ETzogaWRlYWxseSB3ZSBjYW4gZG8gdGhpcyB0cmFuc2FjdGlvbmFsbHkgdG8gZW5zdXJlIGEg
Y29tcGxldGUgY2FjaGUgaXMgd3JpdHRlbiBhcyBvbmUgYXRvbWljIG9wZXJhdGlvbi4NCgkvLyBU
aGlzIG5lZWRzIGVpdGhlciBuZXcgdHJhbnNhY3Rpb25hbCBmZWF0dXJlcyBpbiB0aGUgc3BlYywg
b3IgYXQgdGhlIHZlcnkgbGVhc3QgYSB3YXkgdG8gcmVuYW1lIGEgY2FjaGUNCgkvLyAoc28gd2Ug
Y2FuIHdyaXRlIHRvIGEgdGVtcG9yYXJ5IG5hbWUgdGhhdCB3b24ndCBiZSByZXR1cm5lZCBieSBH
ZXRBdmFpbGFibGVDYWNoZU5hbWVzKCkgYW5kIHRoZW4gcmVuYW1lIGl0IHdoZW4gcmVhZHkpLg0K
CWNvbnN0IGNhY2hlID0gYXdhaXQgY2FjaGVzLm9wZW4oY2FjaGVOYW1lKTsNCgkNCgl0cnkgew0K
CQlyZXR1cm4gYXdhaXQgUHJvbWlzZS5hbGwocmVzcG9uc2VzLm1hcCgNCgkJCShyZXNwb25zZSwg
aSkgPT4gY2FjaGUucHV0KGZpbGVMaXN0W2ldLCByZXNwb25zZSkNCgkJKSk7DQoJfQ0KCWNhdGNo
IChlcnIpDQoJew0KCQkvLyBOb3Qgc3VyZSB3aHkgY2FjaGUucHV0KCkgd291bGQgZmFpbCAobWF5
YmUgaWYgc3RvcmFnZSBxdW90YSBleGNlZWRlZD8pIGJ1dCBpbiBjYXNlIGl0IGRvZXMsDQoJCS8v
IGNsZWFuIHVwIHRoZSBjYWNoZSB0byB0cnkgdG8gYXZvaWQgbGVhdmluZyBiZWhpbmQgYW4gaW5j
b21wbGV0ZSBjYWNoZS4NCgkJY29uc29sZS5lcnJvcihDT05TT0xFX1BSRUZJWCArICJFcnJvciB3
cml0aW5nIGNhY2hlIGVudHJpZXM6ICIsIGVycik7DQoJCWNhY2hlcy5kZWxldGUoY2FjaGVOYW1l
KTsNCgkJdGhyb3cgZXJyOw0KCX0NCn07DQoNCmFzeW5jIGZ1bmN0aW9uIFVwZGF0ZUNoZWNrKGlz
Rmlyc3QpDQp7DQoJdHJ5IHsNCgkJLy8gQWx3YXlzIGJ5cGFzcyBjYWNoZSB3aGVuIHJlcXVlc3Rp
bmcgb2ZmbGluZS5qcyB0byBtYWtlIHN1cmUgd2UgZmluZCBvdXQgYWJvdXQgbmV3IHZlcnNpb25z
Lg0KCQljb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoV2l0aEJ5cGFzcyhPRkZMSU5FX0RBVEFf
RklMRSwgdHJ1ZSk7DQoJCQ0KCQlpZiAoIXJlc3BvbnNlLm9rKQ0KCQkJdGhyb3cgbmV3IEVycm9y
KE9GRkxJTkVfREFUQV9GSUxFICsgIiByZXNwb25kZWQgd2l0aCAiICsgcmVzcG9uc2Uuc3RhdHVz
ICsgIiAiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7DQoJCQkNCgkJY29uc3QgZGF0YSA9IGF3YWl0
IHJlc3BvbnNlLmpzb24oKTsNCgkJDQoJCWNvbnN0IHZlcnNpb24gPSBkYXRhLnZlcnNpb247DQoJ
CWNvbnN0IGZpbGVMaXN0ID0gZGF0YS5maWxlTGlzdDsNCgkJY29uc3QgbGF6eUxvYWRMaXN0ID0g
ZGF0YS5sYXp5TG9hZDsNCgkJY29uc3QgY3VycmVudENhY2hlTmFtZSA9IEdldENhY2hlVmVyc2lv
bk5hbWUodmVyc2lvbik7DQoJCQ0KCQljb25zdCBjYWNoZUV4aXN0cyA9IGF3YWl0IGNhY2hlcy5o
YXMoY3VycmVudENhY2hlTmFtZSk7DQoNCgkJLy8gRG9uJ3QgcmVjYWNoZSBpZiB0aGVyZSBpcyBh
bHJlYWR5IGEgY2FjaGUgdGhhdCBleGlzdHMgZm9yIHRoaXMgdmVyc2lvbi4gQXNzdW1lIGl0IGlz
IGNvbXBsZXRlLg0KCQlpZiAoY2FjaGVFeGlzdHMpDQoJCXsNCgkJCS8vIExvZyB3aGV0aGVyIHdl
IGFyZSB1cC10by1kYXRlIG9yIHBlbmRpbmcgYW4gdXBkYXRlLg0KCQkJY29uc3QgaXNVcGRhdGVQ
ZW5kaW5nID0gYXdhaXQgSXNVcGRhdGVQZW5kaW5nKCk7DQoJCQlpZiAoaXNVcGRhdGVQZW5kaW5n
KQ0KCQkJew0KCQkJCWNvbnNvbGUubG9nKENPTlNPTEVfUFJFRklYICsgIlVwZGF0ZSBwZW5kaW5n
Iik7DQoJCQkJQnJvYWRjYXN0KCJ1cGRhdGUtcGVuZGluZyIpOw0KCQkJfQ0KCQkJZWxzZQ0KCQkJ
ew0KCQkJCWNvbnNvbGUubG9nKENPTlNPTEVfUFJFRklYICsgIlVwIHRvIGRhdGUiKTsNCgkJCQlC
cm9hZGNhc3QoInVwLXRvLWRhdGUiKTsNCgkJCX0NCgkJCXJldHVybjsNCgkJfQ0KCQkNCgkJLy8g
SW1wbGljaXRseSBhZGQgdGhlIG1haW4gcGFnZSBVUkwgdG8gdGhlIGZpbGUgbGlzdCwgZS5nLiAi
aW5kZXguaHRtbCIsIHNvIHdlIGRvbid0IGhhdmUgdG8gYXNzdW1lIGEgc3BlY2lmaWMgbmFtZS4N
CgkJY29uc3QgbWFpblBhZ2VVcmwgPSBhd2FpdCBHZXRNYWluUGFnZVVybCgpOw0KCQkNCgkJLy8g
UHJlcGVuZCB0aGUgbWFpbiBwYWdlIFVSTCB0byB0aGUgZmlsZSBsaXN0IGlmIHdlIGZvdW5kIG9u
ZSBhbmQgaXQgaXMgbm90IGFscmVhZHkgaW4gdGhlIGxpc3QuDQoJCS8vIEFsc28gbWFrZSBzdXJl
IHdlIHJlcXVlc3QgdGhlIGJhc2UgLyB3aGljaCBzaG91bGQgc2VydmUgdGhlIG1haW4gcGFnZS4N
CgkJZmlsZUxpc3QudW5zaGlmdCgiLi8iKTsNCgkJDQoJCWlmIChtYWluUGFnZVVybCAmJiBmaWxl
TGlzdC5pbmRleE9mKG1haW5QYWdlVXJsKSA9PT0gLTEpDQoJCQlmaWxlTGlzdC51bnNoaWZ0KG1h
aW5QYWdlVXJsKTsNCgkJDQoJCWNvbnNvbGUubG9nKENPTlNPTEVfUFJFRklYICsgIkNhY2hpbmcg
IiArIGZpbGVMaXN0Lmxlbmd0aCArICIgZmlsZXMgZm9yIG9mZmxpbmUgdXNlIik7DQoJCQ0KCQlp
ZiAoaXNGaXJzdCkNCgkJCUJyb2FkY2FzdCgiZG93bmxvYWRpbmciKTsNCgkJZWxzZQ0KCQkJQnJv
YWRjYXN0RG93bmxvYWRpbmdVcGRhdGUodmVyc2lvbik7DQoJCQ0KCQkvLyBOb3RlIHdlIGRvbid0
IGJ5cGFzcyB0aGUgY2FjaGUgb24gdGhlIGZpcnN0IHVwZGF0ZSBjaGVjay4gVGhpcyBpcyBiZWNh
dXNlIFNXIGluc3RhbGxhdGlvbiBhbmQgdGhlIGZvbGxvd2luZw0KCQkvLyB1cGRhdGUgY2hlY2sg
Y2FjaGluZyB3aWxsIHJhY2Ugd2l0aCB0aGUgbm9ybWFsIHBhZ2UgbG9hZCByZXF1ZXN0cy4gRm9y
IGFueSBub3JtYWwgbG9hZGluZyBmZXRjaGVzIHRoYXQgaGF2ZSBhbHJlYWR5DQoJCS8vIGNvbXBs
ZXRlZCBvciBhcmUgaW4tZmxpZ2h0LCBpdCBpcyBwb2ludGxlc3MgYW5kIHdhc3RlZnVsIHRvIGNh
Y2hlLWJ1c3QgdGhlIHJlcXVlc3QgZm9yIG9mZmxpbmUgY2FjaGluZywgc2luY2UgdGhhdA0KCQkv
LyBmb3JjZXMgYSBzZWNvbmQgbmV0d29yayByZXF1ZXN0IHRvIGJlIGlzc3VlZCB3aGVuIGEgcmVz
cG9uc2UgZnJvbSB0aGUgYnJvd3NlciBIVFRQIGNhY2hlIHdvdWxkIGJlIGZpbmUuDQoJCWlmIChs
YXp5TG9hZExpc3QpDQoJCQlhd2FpdCBXcml0ZUxhenlMb2FkTGlzdFRvU3RvcmFnZShsYXp5TG9h
ZExpc3QpOwkJCQkJCQkvLyBkdW1wIGxhenkgbG9hZCBsaXN0IHRvIGxvY2FsIHN0b3JhZ2UjDQoJ
CQ0KCQlhd2FpdCBDcmVhdGVDYWNoZUZyb21GaWxlTGlzdChjdXJyZW50Q2FjaGVOYW1lLCBmaWxl
TGlzdCwgIWlzRmlyc3QpOw0KCQljb25zdCBpc1VwZGF0ZVBlbmRpbmcgPSBhd2FpdCBJc1VwZGF0
ZVBlbmRpbmcoKTsNCgkJDQoJCWlmIChpc1VwZGF0ZVBlbmRpbmcpDQoJCXsNCgkJCWNvbnNvbGUu
bG9nKENPTlNPTEVfUFJFRklYICsgIkFsbCByZXNvdXJjZXMgc2F2ZWQsIHVwZGF0ZSByZWFkeSIp
Ow0KCQkJQnJvYWRjYXN0VXBkYXRlUmVhZHkodmVyc2lvbik7DQoJCX0NCgkJZWxzZQ0KCQl7DQoJ
CQljb25zb2xlLmxvZyhDT05TT0xFX1BSRUZJWCArICJBbGwgcmVzb3VyY2VzIHNhdmVkLCBvZmZs
aW5lIHN1cHBvcnQgcmVhZHkiKTsNCgkJCUJyb2FkY2FzdCgib2ZmbGluZS1yZWFkeSIpOw0KCQl9
DQoJfQ0KCWNhdGNoIChlcnIpDQoJew0KCQkvLyBVcGRhdGUgY2hlY2sgZmV0Y2hlcyBmYWlsIHdo
ZW4gd2UncmUgb2ZmbGluZSwgYnV0IGluIGNhc2UgdGhlcmUncyBhbnkgb3RoZXIga2luZCBvZiBw
cm9ibGVtIHdpdGggaXQsIGxvZyBhIHdhcm5pbmcuDQoJCWNvbnNvbGUud2FybihDT05TT0xFX1BS
RUZJWCArICJVcGRhdGUgY2hlY2sgZmFpbGVkOiAiLCBlcnIpOw0KCX0NCn07DQoNCnNlbGYuYWRk
RXZlbnRMaXN0ZW5lcigiaW5zdGFsbCIsIGV2ZW50ID0+DQp7DQoJLy8gT24gaW5zdGFsbCBraWNr
IG9mZiBhbiB1cGRhdGUgY2hlY2sgdG8gY2FjaGUgZmlsZXMgb24gZmlyc3QgdXNlLg0KCS8vIElm
IGl0IGZhaWxzIHdlIGNhbiBzdGlsbCBjb21wbGV0ZSB0aGUgaW5zdGFsbCBldmVudCBhbmQgbGVh
dmUgdGhlIFNXIHJ1bm5pbmcsIHdlJ2xsIGp1c3QNCgkvLyByZXRyeSBvbiB0aGUgbmV4dCBuYXZp
Z2F0ZS4NCglldmVudC53YWl0VW50aWwoDQoJCVVwZGF0ZUNoZWNrKHRydWUpCQkvLyBmaXJzdCB1
cGRhdGUNCgkJLmNhdGNoKCgpID0+IG51bGwpDQoJKTsNCn0pOw0KDQphc3luYyBmdW5jdGlvbiBH
ZXRDYWNoZU5hbWVUb1VzZShhdmFpbGFibGVDYWNoZU5hbWVzLCBkb1VwZGF0ZUNoZWNrKQ0Kew0K
CS8vIFByZWZlciB0aGUgb2xkZXN0IGNhY2hlIGF2YWlsYWJsZS4gVGhpcyBhdm9pZHMgbWl4ZWQt
dmVyc2lvbiByZXNwb25zZXMgYnkgZW5zdXJpbmcgdGhhdCBpZiBhIG5ldyBjYWNoZQ0KCS8vIGlz
IGNyZWF0ZWQgYW5kIGZpbGxlZCBkdWUgdG8gYW4gdXBkYXRlIGNoZWNrIHdoaWxlIHRoZSBwYWdl
IGlzIHJ1bm5pbmcsIHdlIGtlZXAgcmV0dXJuaW5nIHJlc291cmNlcw0KCS8vIGZyb20gdGhlIG9y
aWdpbmFsIChvbGRlc3QpIGNhY2hlIG9ubHkuDQoJaWYgKGF2YWlsYWJsZUNhY2hlTmFtZXMubGVu
Z3RoID09PSAxIHx8ICFkb1VwZGF0ZUNoZWNrKQ0KCQlyZXR1cm4gYXZhaWxhYmxlQ2FjaGVOYW1l
c1swXTsNCgkNCgkvLyBXZSBhcmUgbWFraW5nIGEgbmF2aWdhdGUgcmVxdWVzdCB3aXRoIG1vcmUg
dGhhbiBvbmUgY2FjaGUgYXZhaWxhYmxlLiBDaGVjayBpZiB3ZSBjYW4gZXhwaXJlIGFueSBvbGQg
b25lcy4NCgljb25zdCBhbGxDbGllbnRzID0gYXdhaXQgY2xpZW50cy5tYXRjaEFsbCgpOw0KCQ0K
CS8vIElmIHRoZXJlIGFyZSBvdGhlciBjbGllbnRzIG9wZW4sIGRvbid0IGV4cGlyZSBhbnl0aGlu
ZyB5ZXQuIFdlIGRvbid0IHdhbnQgdG8gZGVsZXRlIGFueSBjYWNoZXMgdGhleQ0KCS8vIG1pZ2h0
IGJlIHVzaW5nLCB3aGljaCBjb3VsZCBjYXVzZSBtaXhlZC12ZXJzaW9uIHJlc3BvbnNlcy4NCglp
ZiAoYWxsQ2xpZW50cy5sZW5ndGggPiAxKQ0KCQlyZXR1cm4gYXZhaWxhYmxlQ2FjaGVOYW1lc1sw
XTsNCgkNCgkvLyBJZGVudGlmeSBuZXdlc3QgY2FjaGUgdG8gdXNlLiBEZWxldGUgYWxsIHRoZSBv
dGhlcnMuDQoJY29uc3QgbGF0ZXN0Q2FjaGVOYW1lID0gYXZhaWxhYmxlQ2FjaGVOYW1lc1thdmFp
bGFibGVDYWNoZU5hbWVzLmxlbmd0aCAtIDFdOw0KCWNvbnNvbGUubG9nKENPTlNPTEVfUFJFRklY
ICsgIlVwZGF0aW5nIHRvIG5ldyB2ZXJzaW9uIik7DQoJDQoJYXdhaXQgUHJvbWlzZS5hbGwoDQoJ
CWF2YWlsYWJsZUNhY2hlTmFtZXMuc2xpY2UoMCwgLTEpDQoJCS5tYXAoYyA9PiBjYWNoZXMuZGVs
ZXRlKGMpKQ0KCSk7DQoJDQoJcmV0dXJuIGxhdGVzdENhY2hlTmFtZTsNCn07DQoNCmFzeW5jIGZ1
bmN0aW9uIEhhbmRsZUZldGNoKGV2ZW50LCBkb1VwZGF0ZUNoZWNrKQ0Kew0KCWNvbnN0IGF2YWls
YWJsZUNhY2hlTmFtZXMgPSBhd2FpdCBHZXRBdmFpbGFibGVDYWNoZU5hbWVzKCk7DQoJDQoJLy8g
Tm8gY2FjaGVzIGF2YWlsYWJsZTogZ28gdG8gbmV0d29yaw0KCWlmICghYXZhaWxhYmxlQ2FjaGVO
YW1lcy5sZW5ndGgpDQoJCXJldHVybiBmZXRjaChldmVudC5yZXF1ZXN0KTsNCgkNCgljb25zdCB1
c2VDYWNoZU5hbWUgPSBhd2FpdCBHZXRDYWNoZU5hbWVUb1VzZShhdmFpbGFibGVDYWNoZU5hbWVz
LCBkb1VwZGF0ZUNoZWNrKTsNCgljb25zdCBjYWNoZSA9IGF3YWl0IGNhY2hlcy5vcGVuKHVzZUNh
Y2hlTmFtZSk7DQoJY29uc3QgY2FjaGVkUmVzcG9uc2UgPSBhd2FpdCBjYWNoZS5tYXRjaChldmVu
dC5yZXF1ZXN0KTsNCgkNCglpZiAoY2FjaGVkUmVzcG9uc2UpDQoJCXJldHVybiBjYWNoZWRSZXNw
b25zZTsJCS8vIHVzZSBjYWNoZWQgcmVzcG9uc2UNCgkNCgkvLyBXZSBuZWVkIHRvIGNoZWNrIGlm
IHRoaXMgcmVxdWVzdCBpcyB0byBiZSBsYXp5LWNhY2hlZC4gU2VuZCB0aGUgcmVxdWVzdCBhbmQg
bG9hZCB0aGUgbGF6eS1sb2FkIGxpc3QNCgkvLyBmcm9tIHN0b3JhZ2Ugc2ltdWx0YW5lb3VzbHku
DQoJY29uc3QgcmVzdWx0ID0gYXdhaXQgUHJvbWlzZS5hbGwoW2ZldGNoKGV2ZW50LnJlcXVlc3Qp
LCBSZWFkTGF6eUxvYWRMaXN0RnJvbVN0b3JhZ2UoKV0pOw0KCWNvbnN0IGZldGNoUmVzcG9uc2Ug
PSByZXN1bHRbMF07DQoJY29uc3QgbGF6eUxvYWRMaXN0ID0gcmVzdWx0WzFdOw0KCQ0KCWlmIChJ
c1VybEluTGF6eUxvYWRMaXN0KGV2ZW50LnJlcXVlc3QudXJsLCBsYXp5TG9hZExpc3QpKQ0KCXsN
CgkJLy8gSGFuZGxlIGZhaWx1cmUgd3JpdGluZyB0byB0aGUgY2FjaGUuIFRoaXMgY2FuIGhhcHBl
biBpZiB0aGUgc3RvcmFnZSBxdW90YSBpcyBleGNlZWRlZCwgd2hpY2ggaXMgcGFydGljdWxhcmx5
DQoJCS8vIGxpa2VseSBpbiBTYWZhcmkgMTEuMSwgd2hpY2ggYXBwZWFycyB0byBoYXZlIHZlcnkg
dGlnaHQgc3RvcmFnZSBsaW1pdHMuIE1ha2Ugc3VyZSBldmVuIGluIHRoZSBldmVudCBvZiBhbiBl
cnJvcg0KCQkvLyB3ZSBjb250aW51ZSB0byByZXR1cm4gdGhlIHJlc3BvbnNlIGZyb20gdGhlIGZl
dGNoLg0KCQl0cnkgew0KCQkJLy8gTm90ZSBjbG9uZSByZXNwb25zZSBzaW5jZSB3ZSBhbHNvIHJl
c3BvbmQgd2l0aCBpdA0KCQkJYXdhaXQgY2FjaGUucHV0KGV2ZW50LnJlcXVlc3QsIGZldGNoUmVz
cG9uc2UuY2xvbmUoKSk7DQoJCX0NCgkJY2F0Y2ggKGVycikNCgkJew0KCQkJY29uc29sZS53YXJu
KENPTlNPTEVfUFJFRklYICsgIkVycm9yIGNhY2hpbmcgJyIgKyBldmVudC5yZXF1ZXN0LnVybCAr
ICInOiAiLCBlcnIpOw0KCQl9DQoJfQ0KCQkNCglyZXR1cm4gZmV0Y2hSZXNwb25zZTsNCn07DQoN
CnNlbGYuYWRkRXZlbnRMaXN0ZW5lcigiZmV0Y2giLCBldmVudCA9Pg0Kew0KCS8qKiBOT1RFIChp
YWluKQ0KCSAqICBUaGlzIGNoZWNrIGlzIHRvIHByZXZlbnQgYSBidWcgd2l0aCBYTUxIdHRwUmVx
dWVzdCB3aGVyZSBpZiBpdHMNCgkgKiAgcHJveGllZCB3aXRoICJGZXRjaEV2ZW50LnByb3RvdHlw
ZS5yZXNwb25kV2l0aCIgbm8gdXBsb2FkIHByb2dyZXNzDQoJICogIGV2ZW50cyBhcmUgdHJpZ2dl
cmVkLiBCeSByZXR1cm5pbmcgd2UgYWxsb3cgdGhlIGRlZmF1bHQgYWN0aW9uIHRvDQoJICogIG9j
Y3VyIGluc3RlYWQuIEN1cnJlbnRseSBhbGwgY3Jvc3Mtb3JpZ2luIHJlcXVlc3RzIGZhbGwgYmFj
ayB0byBkZWZhdWx0Lg0KCSAqLw0KCWlmIChuZXcgVVJMKGV2ZW50LnJlcXVlc3QudXJsKS5vcmln
aW4gIT09IGxvY2F0aW9uLm9yaWdpbikNCgkJcmV0dXJuOw0KCQkNCgkvLyBDaGVjayBmb3IgYW4g
dXBkYXRlIG9uIG5hdmlnYXRlIHJlcXVlc3RzDQoJY29uc3QgZG9VcGRhdGVDaGVjayA9IChldmVu
dC5yZXF1ZXN0Lm1vZGUgPT09ICJuYXZpZ2F0ZSIpOw0KCQ0KCWNvbnN0IHJlc3BvbnNlUHJvbWlz
ZSA9IEhhbmRsZUZldGNoKGV2ZW50LCBkb1VwZGF0ZUNoZWNrKTsNCg0KCWlmIChkb1VwZGF0ZUNo
ZWNrKQ0KCXsNCgkJLy8gYWxsb3cgdGhlIG1haW4gcmVxdWVzdCB0byBjb21wbGV0ZSwgdGhlbiBj
aGVjayBmb3IgdXBkYXRlcw0KCQlldmVudC53YWl0VW50aWwoDQoJCQlyZXNwb25zZVByb21pc2UN
CgkJCS50aGVuKCgpID0+IFVwZGF0ZUNoZWNrKGZhbHNlKSkJCSAvLyBub3QgZmlyc3QgY2hlY2sN
CgkJKTsNCgl9DQoNCglldmVudC5yZXNwb25kV2l0aChyZXNwb25zZVByb21pc2UpOw0KfSk7